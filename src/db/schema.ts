import { integer, sqliteTable, text } from "drizzle-orm/sqlite-core";
import { createInsertSchema, createSelectSchema } from "drizzle-zod";

export const vendite = sqliteTable("vendite", {
  venditaNumeroVendita: text("vendita_numero_vendita").primaryKey(),
  dataAttivazione: integer("created_at", { mode: "timestamp" }),
  venditaStato: text("vendita_stato"),
  venditaDataInizio: integer("created_at", { mode: "timestamp" }),
  venditaDataFine: integer("created_at", { mode: "timestamp" }),
  listinoNome: text("listino_nome"),
  listinoTipologiaVendita: text("listino_tipologia_vendita"),
  venditaNumeroScontrino: text("vendita_numero_scontrino"),
  venditaDataScontrino: integer("created_at", { mode: "timestamp" }),
  venditaTotaleImportoScontrino: text("vendita_totale_importo_scontrino"),
  venditaCodiceLotteria: text("vendita_codice_lotteria"),
  venditaContanti: text("vendita_contanti"),
  venditaPagamentiElettronici: text("vendita_pagamenti_elettronici"),
  venditaBonifici: text("vendita_bonifici"),
  venditaAssegni: text("vendita_assegni"),
  venditaBuoni: text("vendita_buoni"),
  venditaCoupon: text("vendita_coupon"),
  venditaAltriPagamenti: text("vendita_altri_pagamenti"),
  venditaNonScontrinato: text("vendita_non_scontrinato"),
  venditaNonRiscosso: text("vendita_non_riscosso"),
  venditaDettaglioCodiceInterno: text("vendita_dettaglio_codice_interno"),
  venditaIdIstanza: integer("vendita_id_istanza"),
  venditaBrand: text("vendita_brand"),
  venditaFornitore: text("vendita_fornitore"),
  venditaInfo1: text("vendita_info1"),
  venditaInfo2: text("vendita_info2"),
  venditaInfo3: text("vendita_info3"),
  venditaInfo4: text("vendita_info4"),
  venditaInfo5: text("vendita_info5"),
  venditaCategoria: text("vendita_categoria"),
  venditaTipologia: text("vendita_tipologia"),
  codiceProdotto: text("codice_prodotto"),
  codiceEan: text("codice_ean"),
  codiceUnivoco: text("codice_univoco"),
  descrizioneProdotto: text("descrizione_prodotto"),
  canone: text("canone"),
  prezzo: text("prezzo"),
  prezzoIvaEsclusa: text("prezzo_iva_esclusa"),
  costo: text("costo"),
  sconto: text("sconto"),
  scontoIvaEsclusa: text("sconto_iva_esclusa"),
  anticipo: text("anticipo"),
  importoFinanziato: text("importo_finanziato"),
  credito: text("credito"),
  importoNdc: text("importo_ndc"),
  importoImponibile: text("importo_imponibile"),
  ivaAliquota: integer("iva_aliquota"),
  ivaNaturaIva: text("iva_natura_iva"),
  ivaImporto: text("iva_importo"),
  importoScontrino: text("importo_scontrino"),
  clienteCodiceInterno: text("cliente_codice_interno"),
  clienteTipo: text("cliente_tipo"),
  clienteNome: text("cliente_nome"),
  clienteEmail: text("cliente_email"),
  clientePiva: text("cliente_piva"),
  clienteTelefono1: text("cliente_telefono1"),
  clienteTelefono2: text("cliente_telefono2"),
  clienteTelefono3: text("cliente_telefono3"),
  clienteTelefono4: text("cliente_telefono4"),
  codiceClienteWind: text("codice_cliente_wind"),
  campagnaNome: text("campagna_nome"),
  campagnaDataInizio: text("campagna_data_inizio"),
  campagnaDataFine: text("campagna_data_fine"),
  campagnaCampaignManagement: text("campagna_campaign_management"),
  ragioneSocialeCodiceInterno: text("ragione_sociale_codice_interno"),
  ragioneSocialeNominativo: text("ragione_sociale_nominativo"),
  negozioCodiceInterno: text("negozio_codice_interno"),
  negozioNominativo: text("negozio_nominativo"),
  negozioIndirizzo: text("negozio_indirizzo"),
  negozioCivico: text("negozio_civico"),
  negozioCap: text("negozio_cap"),
  negozioCitta: text("negozio_cittÃ "),
  negozioProvincia: text("negozio_provincia"),
  negozioEmail: text("negozio_email"),
  negozioTelefono: text("negozio_telefono"),
  negozioCodiceOperatoreWind: text("negozio_codice_operatore_wind"),
  negozioCodiceOperatoreVodafone: text("negozio_codice_operatore_vodafone"),
  negozioCodiceOperatoreTim: text("negozio_codice_operatore_tim"),
  negozioCodiceOperatoreFastweb: text("negozio_codice_operatore_fastweb"),
  negozioCodiceOperatoreSky: text("negozio_codice_operatore_sky"),
  venditoreNominativo: text("venditore_nominativo"),
  venditaNote: text("vendita_note"),
  createdAt: integer("created_at", { mode: "timestamp" })
    .$defaultFn(() => new Date()),
  updatedAt: integer("updated_at", { mode: "timestamp" })
    .$defaultFn(() => new Date())
    .$onUpdate(() => new Date()),
});

export const selectVenditeSchema = createSelectSchema(vendite);

export const insertVenditeSchema = createInsertSchema(
  vendite,
).omit({
  venditaNumeroVendita: true,
  createdAt: true,
  updatedAt: true,
});

export const patchVenditeSchema = insertVenditeSchema.partial();
